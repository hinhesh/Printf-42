/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_s.c                                             :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: how-choongines <marvin@42.fr>              +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2020/11/23 14:25:06 by how-choon         #+#    #+#             */
/*   Updated: 2020/11/23 17:52:04 by how-choon        ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"
#include "libftprintf.h"
 
void ft_apply_width_ope(t_argument *arg, t_chain *chain, int len)
{
	char	*pad;

	pad = (char*)malloc(sizeof(char) * arg->width + 1);
	pad = ft_memset(pad,' ',arg->width);
	pad[arg->width] = '\0';
	printf("%s",chain->chain_arg);
	if (ft_comp(arg->flags,'-') == 1)
		ft_memcpy(pad, chain->chain_arg, len);
	else	
		ft_memcpy(&pad[arg->width - len],chain->chain_arg,len);	
	chain->chain_print = pad;
}

void ft_apply_width(t_argument *arg, t_chain *chain)
{
	int len;
	
	len = ft_strlen(chain->chain_arg);
	if (arg->prec != -1 && arg->prec < len)
	{
		ft_memset(&chain->chain_arg[arg->prec],'\0', len - arg->prec);
		len = arg->prec;
	}
	if (arg->width > len)
		printf("ok");
//		ft_apply_width_ope(arg, chain, len);
	else
		chain->chain_print = chain->chain_arg;

}
void ft_s(t_argument *arg, t_chain *chain, va_list ap)
{
	char	*chain_arg;
      	chain_arg = va_arg(ap, char *);
	chain->chain_arg = ft_strdup(chain_arg);
	ft_apply_width(arg, chain);
	printf("yo%s",chain->chain_print);

}
